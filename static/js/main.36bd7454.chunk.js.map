{"version":3,"sources":["vars.jsx","Components/TodosFilter/TodosFilter.jsx","Components/Footer/Footer.jsx","Components/TodoItem/TodoItem.jsx","Components/TodoList/TodoList.jsx","App.js","index.js"],"names":["FILTERS","TodoFilter","changeFilter","className","href","onClick","Footer","completedTodos","activeTodos","setFilter","setTodos","length","type","TodoItem","id","title","completed","changeChecked","deleteTodo","classNames","onChange","checked","TodoList","items","map","todo","key","App","useState","todos","query","setQuery","filter","status","setStatus","filteredTodos","filterTodos","onSubmit","event","preventDefault","trim","Date","value","target","placeholder","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36bd7454.chunk.js","sourcesContent":["export const FILTERS = {\n  all: 'all',\n  active: 'active',\n  completed: 'completed',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FILTERS } from '../../vars';\n\nexport const TodoFilter = ({ changeFilter }) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        className=\"selected\"\n        onClick={() => changeFilter(FILTERS.all)}\n      >\n        All\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/active\"\n        onClick={() => changeFilter(FILTERS.active)}\n      >\n        Active\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/completed\"\n        onClick={() => changeFilter(FILTERS.completed)}\n      >\n        Completed\n      </a>\n    </li>\n  </ul>\n);\n\nTodoFilter.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoFilter } from '../TodosFilter/TodosFilter';\n\nexport const Footer = ({\n  completedTodos,\n  activeTodos,\n  setFilter,\n  setTodos,\n}) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {activeTodos.length}\n      {' '}\n      items left\n    </span>\n\n    <TodoFilter changeFilter={setFilter} />\n\n    {\n      !!completedTodos.length && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={() => setTodos(activeTodos)}\n        >\n          Clear completed\n        </button>\n      )\n    }\n  </footer>\n);\n\nFooter.propTypes = {\n  completedTodos: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  activeTodos: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  setFilter: PropTypes.func.isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({\n  id,\n  title,\n  completed,\n  changeChecked,\n  deleteTodo,\n}) => (\n  <li className={classNames({ completed })}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        onChange={() => changeChecked(id)}\n        checked={completed}\n      />\n      <label>{title}</label>\n      <button\n        onClick={() => deleteTodo(id)}\n        type=\"button\"\n        className=\"destroy\"\n      />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  changeChecked: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nexport const TodoList = ({ items, changeChecked, deleteTodo }) => (\n  <ul className=\"todo-list\">\n    {\n      items.map(todo => (\n        <TodoItem\n          key={todo.id}\n          {...todo}\n          changeChecked={changeChecked}\n          deleteTodo={deleteTodo}\n        />\n      ))\n    }\n  </ul>\n);\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  changeChecked: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { Footer } from './Components/Footer/Footer';\nimport { TodoList } from './Components/TodoList/TodoList';\nimport { FILTERS } from './vars';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('');\n  const [status, setStatus] = useState(false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (query.trim().length > 0) {\n      const todo = {\n        id: +new Date(),\n        title: query,\n        completed: false,\n      };\n\n      setTodos([todo, ...todos]);\n    }\n\n    setQuery('');\n  };\n\n  const changeChecked = (id) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id !== id) {\n        return todo;\n      }\n\n      return {\n        ...todo,\n        completed: !todo.completed,\n      };\n    }));\n  };\n\n  const activeTodos = todos.filter(todo => !todo.completed);\n  const completedTodos = todos.filter(todo => todo.completed);\n\n  const filterTodos = (key) => {\n    switch (key) {\n      case FILTERS.active:\n        return activeTodos;\n\n      case FILTERS.completed:\n        return completedTodos;\n\n      default:\n        return todos;\n    }\n  };\n\n  const deleteTodo = (id) => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const filteredTodos = filterTodos(filter);\n\n  const changeAllTodosStatus = () => {\n    if (status) {\n      setTodos(todos.map(todo => ({\n        ...todo,\n        completed: true,\n      })));\n    } else {\n      setTodos(todos.map(todo => ({\n        ...todo,\n        completed: false,\n      })));\n    }\n\n    setStatus(!status);\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            value={query}\n            onChange={event => setQuery(event.target.value)}\n            placeholder=\"What needs to be done?\"\n          />\n        </form>\n      </header>\n\n      <section className=\"main\">\n        {\n          !!todos.length && (\n            <>\n              <input\n                type=\"checkbox\"\n                id=\"toggle-all\"\n                className=\"toggle-all\"\n                checked={todos.length === completedTodos.length}\n                onChange={() => {\n                  changeAllTodosStatus();\n                  setStatus(!status);\n                }\n                }\n              />\n              <label htmlFor=\"toggle-all\">Mark all as complete</label>\n            </>\n          )\n        }\n\n        <TodoList\n          items={filteredTodos}\n          changeChecked={changeChecked}\n          deleteTodo={deleteTodo}\n        />\n      </section>\n\n      {\n        !!todos.length && (\n          <Footer\n            completedTodos={completedTodos}\n            activeTodos={activeTodos}\n            setFilter={setFilter}\n            setTodos={setTodos}\n          />\n        )\n      }\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}