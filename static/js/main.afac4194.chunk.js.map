{"version":3,"sources":["Components/TodoItem/TodoItem.jsx","Components/TodoList/TodoList.jsx","vars.jsx","Components/TodosFilter/TodosFilter.jsx","App.js","index.js"],"names":["TodoItem","id","title","completed","changeChecked","className","classNames","type","onChange","checked","TodoList","items","map","todo","key","FILTERS","TodoFilter","changeFilter","href","onClick","App","useState","todos","setTodos","query","setQuery","filter","setFilter","activeTodos","completedTodos","filteredTodos","filterTodos","onSubmit","event","preventDefault","trim","length","Date","value","target","placeholder","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"4TAIaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,cAAzB,OACtB,wBAAIC,UAAWC,IAAW,CAAEH,eAC1B,yBAAKE,UAAU,QACb,2BACEE,KAAK,WACLF,UAAU,SACVG,SAAU,kBAAMJ,EAAcH,IAC9BQ,QAASN,IAEX,+BAAQD,GACR,4BAAQK,KAAK,SAASF,UAAU,aAElC,2BAAOE,KAAK,OAAOF,UAAU,WCZpBK,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOP,EAAV,EAAUA,cAAV,OACtB,wBAAIC,UAAU,aAEVM,EAAMC,KAAI,SAAAC,GAAI,OACZ,kBAAC,EAAD,eACEC,IAAKD,EAAKZ,IACNY,EAFN,CAGET,cAAeA,UCXZW,EACN,MADMA,EAEH,SAFGA,EAGA,YCCAC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACxB,wBAAIZ,UAAU,WACZ,4BACE,uBACEa,KAAK,KACLb,UAAU,WACVc,QAAS,kBAAMF,EAAaF,KAH9B,QASF,4BACE,uBACEG,KAAK,WACLC,QAAS,kBAAMF,EAAaF,KAF9B,WAQF,4BACE,uBACEG,KAAK,cACLC,QAAS,kBAAMF,EAAaF,KAF9B,gBCsHSK,MA3If,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,OAGeJ,mBAAS,IAHxB,mBAGNK,EAHM,KAGEC,EAHF,KAkCPC,EAAcN,EAAMI,QAAO,SAAAb,GAAI,OAAKA,EAAKV,aACzC0B,EAAiBP,EAAMI,QAAO,SAAAb,GAAI,OAAIA,EAAKV,aAe3C2B,EAbc,SAAChB,GACnB,OAAQA,GACN,KAAKC,EACH,OAAOa,EAET,KAAKb,EACH,OAAOc,EAET,QACE,OAAOP,GAISS,CAAYL,GAElC,OACE,6BAASrB,UAAU,WACjB,4BAAQA,UAAU,UAChB,qCAEA,0BAAM2B,SApDS,SAACC,GAGpB,GAFAA,EAAMC,iBAEFV,EAAMW,OAAOC,OAAS,EAAG,CAC3B,IAAMvB,EAAO,CACXZ,IAAK,IAAIoC,KACTnC,MAAOsB,EACPrB,WAAW,GAGboB,EAAS,CAACV,GAAF,mBAAWS,KAGrBG,EAAS,MAwCH,2BACElB,KAAK,OACLF,UAAU,WACViC,MAAOd,EACPhB,SAAU,SAAAyB,GAAK,OAAIR,EAASQ,EAAMM,OAAOD,QACzCE,YAAY,6BAKlB,6BAASnC,UAAU,QACjB,2BACEE,KAAK,WACLN,GAAG,aACHI,UAAU,eAEZ,2BAAOoC,QAAQ,cAAf,wBAEE,kBAAC,EAAD,CAAU9B,MAAOmB,EAAe1B,cAvDlB,SAACH,GACrBsB,EAASD,EAAMV,KAAI,SAACC,GAClB,OAAIA,EAAKZ,KAAOA,EACPY,EAGF,2BACFA,GADL,IAEEV,WAAYU,EAAKV,sBA0FfmB,EAAMc,QACN,4BAAQ/B,UAAU,UAChB,0BAAMA,UAAU,cACbuB,EAAYQ,OACZ,IAFH,cAMA,kBAAC,EAAD,CAAYnB,aAAcU,IAE1B,4BAAQpB,KAAK,SAASF,UAAU,mBAAhC,sBC7HZqC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.afac4194.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({ id, title, completed, changeChecked }) => (\n  <li className={classNames({ completed })}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        onChange={() => changeChecked(id)}\n        checked={completed}\n      />\n      <label>{title}</label>\n      <button type=\"button\" className=\"destroy\" />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  changeChecked: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nexport const TodoList = ({ items, changeChecked }) => (\n  <ul className=\"todo-list\">\n    {\n      items.map(todo => (\n        <TodoItem\n          key={todo.id}\n          {...todo}\n          changeChecked={changeChecked}\n        />\n      ))\n    }\n  </ul>\n);\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  changeChecked: PropTypes.func.isRequired,\n};\n","export const FILTERS = {\n  all: 'all',\n  active: 'active',\n  completed: 'completed',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FILTERS } from '../../vars';\n\nexport const TodoFilter = ({ changeFilter }) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        className=\"selected\"\n        onClick={() => changeFilter(FILTERS.all)}\n      >\n        All\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/active\"\n        onClick={() => changeFilter(FILTERS.active)}\n      >\n        Active\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/completed\"\n        onClick={() => changeFilter(FILTERS.completed)}\n      >\n        Completed\n      </a>\n    </li>\n  </ul>\n);\n\nTodoFilter.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { TodoList } from './Components/TodoList/TodoList';\nimport { TodoFilter } from './Components/TodosFilter/TodosFilter';\nimport { FILTERS } from './vars';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (query.trim().length > 0) {\n      const todo = {\n        id: +new Date(),\n        title: query,\n        completed: false,\n      };\n\n      setTodos([todo, ...todos]);\n    }\n\n    setQuery('');\n  };\n\n  const changeChecked = (id) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id !== id) {\n        return todo;\n      }\n\n      return {\n        ...todo,\n        completed: !todo.completed,\n      };\n    }));\n  };\n\n  const activeTodos = todos.filter(todo => !todo.completed);\n  const completedTodos = todos.filter(todo => todo.completed);\n\n  const filterTodos = (key) => {\n    switch (key) {\n      case FILTERS.active:\n        return activeTodos;\n\n      case FILTERS.completed:\n        return completedTodos;\n\n      default:\n        return todos;\n    }\n  };\n\n  const filteredTodos = filterTodos(filter);\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            value={query}\n            onChange={event => setQuery(event.target.value)}\n            placeholder=\"What needs to be done?\"\n          />\n        </form>\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        {\n          <TodoList items={filteredTodos} changeChecked={changeChecked} />\n        }\n\n        {/* <ul className=\"todo-list\">\n          <li>\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>asdfghj</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li className=\"completed\">\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>qwertyuio</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li className=\"editing\">\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>zxcvbnm</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li>\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>1234567890</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n        </ul> */}\n      </section>\n\n      {\n        !!todos.length && (\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {activeTodos.length}\n              {' '}\n              items left\n            </span>\n\n            <TodoFilter changeFilter={setFilter} />\n\n            <button type=\"button\" className=\"clear-completed\">\n              Clear completed\n            </button>\n          </footer>\n        )\n      }\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}