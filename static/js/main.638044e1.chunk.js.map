{"version":3,"sources":["vars.jsx","Components/TodosFilter/TodosFilter.jsx","Components/Footer/Footer.jsx","Components/TodoItem/TodoItem.jsx","Components/TodoList/TodoList.jsx","App.js","index.js"],"names":["FILTERS","TodoFilter","changeFilter","className","href","onClick","Footer","completedTodos","activeTodos","setFilter","setTodos","length","type","TodoItem","id","title","completed","changeChecked","deleteTodo","changeTitle","useState","isEditingAllow","setIsEditingAllow","editingTitle","setEditingTitle","classNames","editing","onDoubleClick","onChange","checked","value","event","target","trim","onKeyUp","key","onBlur","TodoList","items","map","todo","App","initialValue","item","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","todos","query","setQuery","filter","filteredTodos","filterTodos","onSubmit","preventDefault","Date","placeholder","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.638044e1.chunk.js","sourcesContent":["export const FILTERS = {\n  all: 'all',\n  active: 'active',\n  completed: 'completed',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FILTERS } from '../../vars';\n\nexport const TodoFilter = ({ changeFilter }) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        className=\"selected\"\n        onClick={() => changeFilter(FILTERS.all)}\n      >\n        All\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/active\"\n        onClick={() => changeFilter(FILTERS.active)}\n      >\n        Active\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/completed\"\n        onClick={() => changeFilter(FILTERS.completed)}\n      >\n        Completed\n      </a>\n    </li>\n  </ul>\n);\n\nTodoFilter.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoFilter } from '../TodosFilter/TodosFilter';\n\nexport const Footer = ({\n  completedTodos,\n  activeTodos,\n  setFilter,\n  setTodos,\n}) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {activeTodos.length}\n      {' '}\n      items left\n    </span>\n\n    <TodoFilter changeFilter={setFilter} />\n\n    {\n      !!completedTodos.length && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={() => setTodos(activeTodos)}\n        >\n          Clear completed\n        </button>\n      )\n    }\n  </footer>\n);\n\nFooter.propTypes = {\n  completedTodos: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  activeTodos: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  setFilter: PropTypes.func.isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({\n  id,\n  title,\n  completed,\n  changeChecked,\n  deleteTodo,\n  changeTitle,\n}) => {\n  const [isEditingAllow, setIsEditingAllow] = useState(false);\n  const [editingTitle, setEditingTitle] = useState(title);\n\n  const handleKey = (event) => {\n    const { key } = event;\n\n    switch (key) {\n      case 'Enter':\n        if (editingTitle.length === 0) {\n          setEditingTitle(title);\n        } else {\n          changeTitle(id, editingTitle);\n        }\n\n        setIsEditingAllow(false);\n        break;\n\n      case 'Escape':\n        setEditingTitle(title);\n        setIsEditingAllow(false);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleBlur = () => {\n    if (editingTitle.length === 0) {\n      setEditingTitle(title);\n    } else {\n      changeTitle(id, editingTitle);\n    }\n\n    setIsEditingAllow(false);\n  };\n\n  return (\n    <li\n      className={classNames({ editing: isEditingAllow }, { completed })}\n      onDoubleClick={() => setIsEditingAllow(true)}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          onChange={() => changeChecked(id)}\n          checked={completed}\n        />\n        <label>{title}</label>\n        <button\n          onClick={() => deleteTodo(id)}\n          type=\"button\"\n          className=\"destroy\"\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={editingTitle}\n        onChange={event => setEditingTitle(event.target.value.trim())}\n        onKeyUp={handleKey}\n        onBlur={handleBlur}\n      />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  changeChecked: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  changeTitle: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nexport const TodoList = ({ items, changeChecked, deleteTodo, changeTitle }) => (\n  <ul className=\"todo-list\">\n    {\n      items.map(todo => (\n        <TodoItem\n          key={todo.id}\n          {...todo}\n          changeChecked={changeChecked}\n          deleteTodo={deleteTodo}\n          changeTitle={changeTitle}\n        />\n      ))\n    }\n  </ul>\n);\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  changeChecked: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  changeTitle: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { Footer } from './Components/Footer/Footer';\nimport { TodoList } from './Components/TodoList/TodoList';\nimport { FILTERS } from './vars';\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value) => {\n    const valueToStore\n      = value instanceof Function ? value(storedValue) : value;\n\n    setStoredValue(valueToStore);\n    window.localStorage.setItem(key, JSON.stringify(valueToStore));\n  };\n\n  return [storedValue, setValue];\n}\n\nfunction App() {\n  const [todos, setTodos] = useLocalStorage('todos', []);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (query.trim().length > 0) {\n      const todo = {\n        id: +new Date(),\n        title: query,\n        completed: false,\n      };\n\n      setTodos([todo, ...todos]);\n    }\n\n    setQuery('');\n  };\n\n  const changeChecked = (id) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id !== id) {\n        return todo;\n      }\n\n      return {\n        ...todo,\n        completed: !todo.completed,\n      };\n    }));\n  };\n\n  const activeTodos = todos.filter(todo => !todo.completed);\n  const completedTodos = todos.filter(todo => todo.completed);\n\n  const filterTodos = (key) => {\n    switch (key) {\n      case FILTERS.active:\n        return activeTodos;\n\n      case FILTERS.completed:\n        return completedTodos;\n\n      default:\n        return todos;\n    }\n  };\n\n  const deleteTodo = (id) => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const filteredTodos = filterTodos(filter);\n\n  const changeAllTodosStatus = (event) => {\n    setTodos(todos.map(todo => ({\n      ...todo,\n      completed: event.target.checked,\n    })));\n  };\n\n  const changeTitle = (id, title) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id !== id) {\n        return todo;\n      }\n\n      return {\n        ...todo,\n        title,\n      };\n    }));\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            value={query}\n            onChange={event => setQuery(event.target.value)}\n            placeholder=\"What needs to be done?\"\n          />\n        </form>\n      </header>\n\n      <section className=\"main\">\n        {\n          !!todos.length && (\n            <>\n              <input\n                type=\"checkbox\"\n                id=\"toggle-all\"\n                className=\"toggle-all\"\n                checked={todos.length === completedTodos.length}\n                onChange={changeAllTodosStatus}\n              />\n              <label htmlFor=\"toggle-all\">Mark all as complete</label>\n            </>\n          )\n        }\n        <TodoList\n          items={filteredTodos}\n          changeChecked={changeChecked}\n          deleteTodo={deleteTodo}\n          changeTitle={changeTitle}\n        />\n      </section>\n\n      {\n        !!todos.length && (\n          <Footer\n            completedTodos={completedTodos}\n            activeTodos={activeTodos}\n            setFilter={setFilter}\n            setTodos={setTodos}\n          />\n        )\n      }\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}